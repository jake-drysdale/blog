{"version":3,"sources":["webpack:///./src/pages/tags.js"],"names":["TagIndex","data","siteTitle","site","siteMetadata","title","tags","allMarkdownRemark","distinct","className","map","tag","key","to","_","kebabCase","style","marginBottom","props","query","render"],"mappings":"saAUMA,G,UAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACZC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAOL,EAAKM,kBAAkBC,SAEpC,OACE,kBAAC,IAAD,CAAQH,MAAOH,GACb,kBAAC,IAAD,CACEG,MAAM,SAER,wBAAII,UAAU,YACd,yBAAKA,UAAU,yBACZH,EAAKI,KAAK,SAAAC,GACT,OACI,kBAAC,OAAD,CACAF,UAAU,mBACVG,IAAKD,EACLE,GAAE,SAAWC,IAAEC,UAAUJ,IAEzB,yBAAKF,UAAU,oBAAoBE,QAKzC,wBAAIF,UAAU,UAAUO,MAAO,CAACC,aAAa,YAkBtC,mBAAAC,GAAK,OAClB,kBAAC,cAAD,CACEC,MAfY,aAgBZC,OAAQ,SAAAnB,GAAI,OACV,kBAACD,EAAD,CAAUkB,OAAK,EAACjB,KAAMA,KAH1B","file":"component---src-pages-tags-js-5bc4970449ed93c4054f.js","sourcesContent":["import React from \"react\"\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport \"../styles/style.css\"\n\nconst TagIndex = ({ data }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const tags = data.allMarkdownRemark.distinct\n  \n  return (\n    <Layout title={siteTitle}>\n      <SEO\n        title=\"Tags\"\n      />\n      <hr className=\"contour\"/>\n      <div className=\"tag-archive-container\">\n        {tags.map( tag => {\n          return(\n              <Link\n              className=\"tag-archive-link\"\n              key={tag}\n              to={`/tags/${_.kebabCase(tag)}`}\n              >\n              <div className=\"tag-archive-item\">{tag}</div>\n              </Link>\n            )\n          })}\n        </div>\n        <hr className=\"contour\" style={{marginBottom:`1em`}}/>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark {\n      distinct(field: frontmatter___tags)\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <TagIndex props data={data} />\n    )}\n  />\n)\n"],"sourceRoot":""}