{"version":3,"file":"component---src-templates-tag-index-js-01888920e6539ec9ca9d.js","mappings":"2KAIMA,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAuCH,OAvCGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJC,OAAA,WACE,IAAMC,EAAOC,KAAKD,MAAZA,MACN,OACE,uBAAKE,IAAKF,EAAMG,KAAKC,OAAOC,MAC1B,uBAAKC,UAAU,aACb,gBAAC,IAAD,CAAMC,KAAMP,EAAMG,KAAKK,YAAYD,OACnC,8BACE,0BACE,gBAAC,EAAAE,KAAD,CAAMC,GAAIV,EAAMG,KAAKC,OAAOC,MAC3BL,EAAMG,KAAKK,YAAYG,OAASX,EAAMG,KAAKC,OAAOC,OAGrD,6BAAQL,EAAMG,KAAKK,YAAYI,OAEhCZ,EAAMG,KAAKK,YAAYK,WACtB,gBAAC,EAAAJ,KAAD,CAAMC,GAAIV,EAAMG,KAAKC,OAAOC,MAAM,uBAChCS,IAAKd,EAAMG,KAAKK,YAAYK,UAAUE,gBAAgBC,MAAMC,aAC5DC,IAAKlB,EAAMG,KAAKK,YAAYK,UAAUE,gBAAgBC,MAAME,OAGhE,+BACE,qBACEC,wBAAyB,CACzBC,OAAQpB,EAAMG,KAAKK,YAAYa,aAAerB,EAAMG,KAAKmB,YAI7D,uBAAKhB,UAAU,sBACb,gBAAC,EAAAG,KAAD,CAAMC,GAAIV,EAAMG,KAAKC,OAAOC,MAC1B,yCACA,uBAAKkB,QAAQ,MAAMC,MAAM,6BAA6BC,WAAW,+BAA+BC,EAAE,MAAMC,EAAE,MAAMC,QAAQ,gBAAgB,oBAAkB,oBAAoBC,SAAS,YACrL,yBAAG,wBAAMC,EAAE,2FAOxB,EAvCGhC,CAAiBiC,EAAAA,WA0CvB,aAAe/B,GAAK,OAClB,gBAACF,EAAD,CAAUE,MAAOA,M,kFCtCbgC,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KA8BH,OA9BGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJjC,OAAA,WACE,IAAMC,EAAQC,KAAKD,MACbiC,EAAMhC,KAAKD,MAAMkC,YAAYD,IAC7BE,EAAQlC,KAAKD,MAAMoC,KAAKC,kBAAkBC,MAC1CC,EAAYtC,KAAKD,MAAMoC,KAAKI,KAAKC,aAAa9B,MAEpD,OACE,gBAAC,IAAD,CAAQA,MAAO4B,GACb,gBAAC,IAAD,CAEE5B,MAAK,KAAMsB,EAAIS,OAAO,GAAGC,cAAgBV,EAAIW,MAAM,IACnDC,SAAU,CAAC,GAAGZ,EAAJ,wCAEZ,0BAAQ3B,UAAU,iBAChB,sBAAIA,UAAU,mBAAd,IAAkC2B,EAAlC,IAAwCjC,EAAMoC,KAAKC,kBAAkBS,WAArE,MAEJ,uBAAKxC,UAAU,aACZ6B,EAAMY,KAAI,YAAe,IAAZ5C,EAAW,EAAXA,KACZ,OACE,gBAAC,IAAD,CACED,IAAKC,EAAKC,OAAOC,KACjBF,KAAMA,EACN6C,UAAS,eAOpB,EA9BGhB,CAAyBiB,EAAAA,WAiC/B","sources":["webpack://gatsby-starter-blog/./src/components/postCard.js","webpack://gatsby-starter-blog/./src/templates/tag-index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"gatsby\"\nimport Tags from \"./tags\"\n\nclass PostCard extends Component {\n  render() {\n    const{props}=this.props;\n    return (\n      <div key={props.node.fields.slug}>\n        <div className=\"post-card\">\n          <Tags tags={props.node.frontmatter.tags}/>\n          <header>\n            <h1>\n              <Link to={props.node.fields.slug}>\n              {props.node.frontmatter.title || props.node.fields.slug}\n              </Link>\n            </h1>\n            <small>{props.node.frontmatter.date}</small>\n          </header>\n          {props.node.frontmatter.thumbnail &&\n            <Link to={props.node.fields.slug}><img\n              alt={props.node.frontmatter.thumbnail.childImageSharp.fluid.originalName}\n              src={props.node.frontmatter.thumbnail.childImageSharp.fluid.src}\n            /></Link>\n          }\n          <section>\n            <p\n              dangerouslySetInnerHTML={{\n              __html: props.node.frontmatter.description || props.node.excerpt,\n              }}\n            />\n          </section>\n          <div className=\"post-card-readmore\">\n            <Link to={props.node.fields.slug}>\n              <span>Read more</span>\n              <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 1000 1000\" enable-background=\"new 0 0 1000 1000\" xmlSpace=\"preserve\">\n                <g><path d=\"M767.9,499.9L291.6,10l-59.4,61.3l416.6,428.7L232.1,928.7l59.5,61.3L767.9,499.9z\"/></g>\n              </svg>\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default props => (\n  <PostCard props={props}/>\n)","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostCard from \"../components/postCard\"\n\nimport \"../styles/style.css\"\n\nclass TagIndexTemplate extends React.Component {\n  render() {\n    const props = this.props\n    const tag = this.props.pageContext.tag\n    const posts = this.props.data.allMarkdownRemark.edges\n    const siteTitle = this.props.data.site.siteMetadata.title\n\n    return (\n      <Layout title={siteTitle}>\n        <SEO\n          // title={`#${tag}`}\n          title={`#${tag.charAt(0).toUpperCase() + tag.slice(1)}`}\n          keywords={[`${tag}`, `blog`, `gatsby`, `javascript`, `react`]}\n        />\n        <header className=\"tag-page-head\">\n          <h1 className=\"page-head-title\">#{tag}({props.data.allMarkdownRemark.totalCount})</h1>\n        </header>\n      <div className=\"post-feed\">\n        {posts.map(({ node }) => {\n          return (\n            <PostCard\n              key={node.fields.slug}\n              node={node}\n              postClass={`post`}\n            />\n          )\n        })}\n      </div>\n    </Layout>\n    )\n  }\n}\n\nexport default TagIndexTemplate\n\nexport const pageQuery = graphql`\n  query PostByTag($tag: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(filter: { frontmatter: { tags: { in: [$tag] } } }, sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM D, YYYY\")\n            title\n            description\n            tags\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 670, maxHeight: 200, cropFocus: CENTER) {\n                  src\n                  originalName\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["PostCard","render","props","this","key","node","fields","slug","className","tags","frontmatter","Link","to","title","date","thumbnail","alt","childImageSharp","fluid","originalName","src","dangerouslySetInnerHTML","__html","description","excerpt","version","xmlns","xmlnsXlink","x","y","viewBox","xmlSpace","d","Component","TagIndexTemplate","tag","pageContext","posts","data","allMarkdownRemark","edges","siteTitle","site","siteMetadata","charAt","toUpperCase","slice","keywords","totalCount","map","postClass","React"],"sourceRoot":""}